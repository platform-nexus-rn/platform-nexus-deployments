---
apiVersion: v1
kind: Service
metadata:
    annotations:
        k8s.score.dev/workload-name: my-demo-service
    creationTimestamp: null
    labels:
        app.kubernetes.io/instance: my-demo-service-dbe3794e61
        app.kubernetes.io/managed-by: score-k8s
        app.kubernetes.io/name: my-demo-service
    name: my-demo-service-svc
spec:
    ports:
        - name: metrics
          port: 8080
          protocol: TCP
          targetPort: 8080
    selector:
        app.kubernetes.io/instance: my-demo-service-dbe3794e61
status:
    loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        k8s.score.dev/workload-name: my-demo-service
    creationTimestamp: null
    labels:
        app.kubernetes.io/instance: my-demo-service-dbe3794e61
        app.kubernetes.io/managed-by: score-k8s
        app.kubernetes.io/name: my-demo-service
    name: my-demo-service
spec:
    replicas: 1
    selector:
        matchLabels:
            app.kubernetes.io/instance: my-demo-service-dbe3794e61
    strategy: {}
    template:
        metadata:
            annotations:
                k8s.score.dev/workload-name: my-demo-service
            creationTimestamp: null
            labels:
                app.kubernetes.io/instance: my-demo-service-dbe3794e61
                app.kubernetes.io/managed-by: score-k8s
                app.kubernetes.io/name: my-demo-service
        spec:
            containers:
                - env:
                    - name: FLASK_ENV
                      value: development
                  image: ghcr.io/platform-nexus-rn/my-demo-service
                  name: app
                  resources: {}
status: {}
