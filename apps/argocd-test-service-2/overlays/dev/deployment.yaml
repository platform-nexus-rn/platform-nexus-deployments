---
apiVersion: v1
kind: Service
metadata:
    annotations:
        k8s.score.dev/workload-name: argocd-test-service-2
    creationTimestamp: null
    labels:
        app.kubernetes.io/instance: argocd-test-service-2-0fda7c31df
        app.kubernetes.io/managed-by: score-k8s
        app.kubernetes.io/name: argocd-test-service-2
    name: argocd-test-service-2-svc
spec:
    ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
    selector:
        app.kubernetes.io/instance: argocd-test-service-2-0fda7c31df
status:
    loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        k8s.score.dev/workload-name: argocd-test-service-2
    creationTimestamp: null
    labels:
        app.kubernetes.io/instance: argocd-test-service-2-0fda7c31df
        app.kubernetes.io/managed-by: score-k8s
        app.kubernetes.io/name: argocd-test-service-2
    name: argocd-test-service-2
spec:
    replicas: 1
    selector:
        matchLabels:
            app.kubernetes.io/instance: argocd-test-service-2-0fda7c31df
    strategy: {}
    template:
        metadata:
            annotations:
                k8s.score.dev/workload-name: argocd-test-service-2
            creationTimestamp: null
            labels:
                app.kubernetes.io/instance: argocd-test-service-2-0fda7c31df
                app.kubernetes.io/managed-by: score-k8s
                app.kubernetes.io/name: argocd-test-service-2
        spec:
            containers:
                - env:
                    - name: FLASK_ENV
                      value: development
                  image: ghcr.io/platform-nexus-rn/argocd-test-service-2
                  name: app
                  resources: {}
status: {}
